version: '3'

services:

  party-service:
    container_name: party-service
    image: sdcplatform/ras-party
    ports:
      - "${PARTY_PORT}:${PARTY_PORT}"
    external_links:
     - postgres
    environment:
      - DATABASE_URI=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      - RAS_OAUTH_SERVICE_PORT=${OAUTH_PORT}
      - RAS_OAUTH_CLIENT_ID=ons@ons.gov
      - RAS_OAUTH_CLIENT_SECRET=password
      - RAS_CASE_SERVICE_HOST=${CASE_HOST}
      - RAS_COLLEX_SERVICE_HOST=${COLLEX_HOST}
      - RAS_SURVEY_SERVICE_HOST=${SURVEY_HOST}
      - RAS_IAC_SERVICE_HOST=${IAC_HOST}
      - RAS_OAUTH_SERVICE_HOST=${OAUTH_HOST}
      - SECURITY_USER_NAME=${SECURITY_USER_NAME}
      - SECURITY_USER_PASSWORD=${SECURITY_USER_PASSWORD}
      - ZIPKIN_DSN=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v1/spans
      - ZIPKIN_SAMPLE_RATE=100
    networks:
      - rasrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PARTY_PORT}/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  secure-message-service:
    container_name: secure-message
    image: sdcplatform/ras-secure-message
    ports:
      - "${SECURE_MESSAGE_PORT}:${SECURE_MESSAGE_PORT}"
    environment:
      - SECURE_MESSAGING_DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      - SM_JWT_ENCRYPT=0
      - SECURITY_USER_NAME=${SECURITY_USER_NAME}
      - SECURITY_USER_PASSWORD=${SECURITY_USER_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - NOTIFICATION_API_KEY=${NOTIFICATION_API_KEY}
      - NOTIFICATION_TEMPLATE_ID=${NOTIFICATION_TEMPLATE_ID}
      - SERVICE_ID=${SERVICE_ID}
      - RAS_PARTY_SERVICE_HOST=${PARTY_HOST}
      - RAS_PARTY_SERVICE_PORT=${PARTY_PORT}
      - RM_CASE_SERVICE_HOST=${CASE_HOST}
      - RM_CASE_SERVICE_PORT=${CASE_PORT}
      - USE_UAA=1
      - UAA_URL=http://${UAA_HOST}:${UAA_PORT}
      - CLIENT_ID=secure_message
      - CLIENT_SECRET=password
      - ZIPKIN_DSN=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v1/spans
      - ZIPKIN_SAMPLE_RATE=100
    networks:
      - rasrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${SECURE_MESSAGE_PORT}/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  frontstage:
    container_name: frontstage
    image: sdcplatform/ras-frontstage
    ports:
      - "${FRONTSTAGE_PORT}:${FRONTSTAGE_PORT}"
    environment:
      - CASE_URL=http://${CASE_HOST}:${CASE_PORT}
      - CASE_USERNAME=${CASE_USERNAME}
      - CASE_PASSWORD=${CASE_PASSWORD}
      - COLLECTION_EXERCISE_URL=http://${COLLEX_HOST}:${COLLEX_PORT}
      - COLLECTION_EXERCISE_USERNAME=${COLLECTION_EXERCISE_USERNAME}
      - COLLECTION_EXERCISE_PASSWORD=${COLLECTION_EXERCISE_PASSWORD}
      - COLLECTION_INSTRUMENT_URL=http://${COLL_INST_HOST}:${COLL_INST_PORT}
      - COLLECTION_INSTRUMENT_USERNAME=${COLL_INST_USERNAME}
      - COLLECTION_INSTRUMENT_PASSWORD=${COLL_INST_PASSWORD}
      - EQ_URL=${EQ_URL}
      - IAC_URL=http://${IAC_HOST}:${IAC_PORT}
      - IAC_USERNAME=${IAC_USERNAME}
      - IAC_PASSWORD=${IAC_PASSWORD}
      - JSON_SECRET_KEYS=${JSON_SECRET_KEYS_FRONTSTAGE}
      - JWT_SECRET=${JWT_SECRET}
      - OAUTHLIB_INSECURE_TRANSPORT=1
      - OAUTH_URL=http://${OAUTH_HOST}:${OAUTH_PORT}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - PARTY_URL=http://${PARTY_HOST}:${PARTY_PORT}
      - PARTY_USERNAME=${PARTY_USERNAME}
      - PARTY_PASSWORD=${PARTY_PASSWORD}
      - PORT=${FRONTSTAGE_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=3
      - SECURE_MESSAGE_URL=http://${SECURE_MESSAGE_HOST}:${SECURE_MESSAGE_PORT}
      - SECURITY_USER_NAME=${SECURITY_USER_NAME}
      - SECURITY_USER_PASSWORD=${SECURITY_USER_PASSWORD}
      - SURVEY_URL=http://${SURVEY_HOST}:${SURVEY_PORT}
      - SURVEY_USERNAME=${SECURITY_USER_NAME}
      - SURVEY_PASSWORD=${SECURITY_USER_PASSWORD}
      - ZIPKIN_DSN=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v1/spans
      - ZIPKIN_SAMPLE_RATE=100
    networks:
      - rasrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTSTAGE_PORT}/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  collection-instrument-service:
    container_name: collection-instrument
    image: sdcplatform/ras-collection-instrument
    ports:
      - "${COLL_INST_PORT}:${COLL_INST_PORT}"
    environment:
      - DATABASE_URI=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/postgres
      - SECURITY_USER_NAME=${SECURITY_USER_NAME}
      - SECURITY_USER_PASSWORD=${SECURITY_USER_PASSWORD}
      - JSON_SECRET_KEYS=${JSON_SECRET_KEYS}
      - CONFIG_YML=config/config-docker.yaml
      - ONS_CRYPTOKEY=somethingsecure
      - COLLECTION_EXERCISE_HOST=${COLLEX_HOST}
      - CASE_SERVICE_HOST=${CASE_HOST}
      - PARTY_SERVICE_HOST=${PARTY_HOST}
      - PARTY_SERVICE_PORT=${PARTY_PORT}
      - RM_SURVEY_SERVICE_HOST=${SURVEY_HOST}
      - RABBITMQ_AMQP_SURVEY_RESPONSE=amqp://guest:guest@${RABBIT_HOST}:${RABBIT_PORT}
      - RABBITMQ_AMQP_COLLECTION_INSTRUMENT=amqp://guest:guest@${RABBIT_HOST}:${RABBIT_PORT}
      - ZIPKIN_DSN=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v1/spans
      - ZIPKIN_SAMPLE_RATE=100
    networks:
      - rasrmdockerdev_default
    external_links:
      - postgres:ras-postgres
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${COLL_INST_PORT}/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  oauth2-service:
    container_name: oauth2-service
    image: sdcplatform/django-oauth2-test
    ports:
      - 8040:8040
    environment:
      - OAUTH2_SUPER_USER=admin
      - OAUTH2_SUPER_USER_PASSWORD=admin2017
      - OAUTH2_SUPER_USER_EMAIL=admin@email.com
      - DJANGO_SETTINGS_MODULE=proj.settings.docker
    external_links:
      - postgres:ras-postgres
    networks:
      - rasrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8040/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  respondent-home-ui:
    container_name: respondent-home-ui
    image: sdcplatform/respondent-home-ui
    ports:
      - 9092:9092
    environment:
      - ACCOUNT_SERVICE_URL=${ACCOUNT_SERVICE_URL}
      - CASE_URL=http://${CASE_HOST}:${CASE_PORT}
      - CASE_USERNAME=${CASE_USERNAME}
      - CASE_PASSWORD=${CASE_PASSWORD}
      - COLLECTION_EXERCISE_URL=http://${COLLEX_HOST}:${COLLEX_PORT}
      - COLLECTION_EXERCISE_USERNAME=${COLLECTION_EXERCISE_USERNAME}
      - COLLECTION_EXERCISE_PASSWORD=${COLLECTION_EXERCISE_PASSWORD}
      - COLLECTION_INSTRUMENT_URL=http://${COLL_INST_HOST}:${COLL_INST_PORT}
      - COLLECTION_INSTRUMENT_USERNAME=${COLL_INST_USERNAME}
      - COLLECTION_INSTRUMENT_PASSWORD=${COLL_INST_PASSWORD}
      - IAC_URL=http://${IAC_HOST}:${IAC_PORT}
      - IAC_USERNAME=${IAC_USERNAME}
      - IAC_PASSWORD=${IAC_PASSWORD}
      - JSON_SECRET_KEYS=${JSON_SECRET_KEYS_RH}
      - SAMPLE_URL=http://${SAMPLE_HOST}:${SAMPLE_PORT}
      - SAMPLE_USERNAME=${SAMPLE_USERNAME}
      - SAMPLE_PASSWORD=${SAMPLE_PASSWORD}
      - SURVEY_URL=http://${SURVEY_HOST}:${SURVEY_PORT}
      - SURVEY_USERNAME=${SECURITY_USER_NAME}
      - SURVEY_PASSWORD=${SECURITY_USER_PASSWORD}
    networks:
      - rasrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

  response-operations-ui:
    container_name: response-operations-ui
    image: sdcplatform/response-operations-ui
    ports:
      - 8085:8085
    environment:
      - CASE_URL=http://${CASE_HOST}:${CASE_PORT}
      - CASE_USERNAME=${CASE_USERNAME}
      - CASE_PASSWORD=${CASE_PASSWORD}
      - COLLECTION_EXERCISE_URL=http://${COLLEX_HOST}:${COLLEX_PORT}
      - COLLECTION_EXERCISE_USERNAME=${COLLECTION_EXERCISE_USERNAME}
      - COLLECTION_EXERCISE_PASSWORD=${COLLECTION_EXERCISE_PASSWORD}
      - COLLECTION_INSTRUMENT_URL=http://${COLL_INST_HOST}:${COLL_INST_PORT}
      - COLLECTION_INSTRUMENT_USERNAME=${COLL_INST_USERNAME}
      - COLLECTION_INSTRUMENT_PASSWORD=${COLL_INST_PASSWORD}
      - IAC_URL=http://${IAC_HOST}:${IAC_PORT}
      - IAC_USERNAME=${IAC_USERNAME}
      - IAC_PASSWORD=${IAC_PASSWORD}
      - PARTY_URL=http://${PARTY_HOST}:${PARTY_PORT}
      - PARTY_USERNAME=${PARTY_USERNAME}
      - PARTY_PASSWORD=${PARTY_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=3
      - SAMPLE_URL=http://${SAMPLE_HOST}:${SAMPLE_PORT}
      - SAMPLE_USERNAME=${SAMPLE_USERNAME}
      - SAMPLE_PASSWORD=${SAMPLE_PASSWORD}
      - SURVEY_URL=http://${SURVEY_HOST}:${SURVEY_PORT}
      - SURVEY_USERNAME=${SECURITY_USER_NAME}
      - SURVEY_PASSWORD=${SECURITY_USER_PASSWORD}
      - SECURE_MESSAGE_URL=http://${SECURE_MESSAGE_HOST}:${SECURE_MESSAGE_PORT}
      - RAS_SECURE_MESSAGING_JWT_SECRET=${JWT_SECRET}
      - UAA_SERVICE_URL=http://${UAA_HOST}:${UAA_PORT}
      - UAA_CLIENT_ID=response_operations
      - UAA_CLIENT_SECRET=password
      - ZIPKIN_DSN=http://${ZIPKIN_HOST}:${ZIPKIN_PORT}/api/v1/spans
      - ZIPKIN_SAMPLE_RATE=100
    external_links:
      - redis
    networks:
      - rasrmdockerdev_default
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/info"]
      interval: 1m30s
      timeout: 10s
      retries: 3

networks:
   rasrmdockerdev_default:
     external: true
